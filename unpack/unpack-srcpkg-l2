#!/usr/bin/perl
# unpack-srcpkg-l2 -- lintian unpack script (source packages level 2)
#
# syntax: unpack-srcpkg-l2 <base-dir>

# Copyright (C) 1998 Christian Schwarz and Richard Braakman
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, you can find it on the World Wide
# Web at http://www.gnu.org/copyleft/gpl.html, or write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
# MA 02110-1301, USA.

use strict;
use vars qw($verbose);
use FileHandle;

use lib "$ENV{'LINTIAN_ROOT'}/lib";
use Pipeline;

($#ARGV == 0) or fail("syntax: unpack-srcpkg-l2 <base-dir>");
my $base_dir = shift;

print "N: Unpacking source package in directory $base_dir ...\n" if $verbose;

# We can't use spawn yet because older versions of dpkg-source print things
# out even with -q.  This can be fixed to use spawn once that newer version of
# dpkg is in oldstable.
my $pid = fork;
if (not defined $pid) {
    fail("cannot fork: $!");
} elsif ($pid == 0) {
    open(STDOUT, '>', '/dev/null');
    exec('dpkg-source', '-q', '-x', "$base_dir/dsc", "$base_dir/unpacked");
} else {
    waitpid($pid, 0);
    unless ($? == 0) {
        fail("cannot run dpkg-source: $!");
    }
}

# fix permissions
spawn('chmod', '-R', 'u+rwX,o+rX,o-w', "$base_dir/unpacked") == 0 or fail();

exit 0;

# -------------------------------

sub fail {
  if ($_[0]) {
    print STDERR "internal error: $_[0]\n";
  } elsif ($!) {
    print STDERR "internal error: $!\n";
  } else {
    print STDERR "internal error.\n";
  }
  exit 1;
}

# Local Variables:
# indent-tabs-mode: nil
# cperl-indent-level: 4
# End:
# vim: syntax=perl sw=4 sts=4 ts=4 et shiftround
