#!/usr/bin/perl -w
# hardening-info -- lintian collection script

# The original shell script version of this script is
# Copyright (C) 1998 Christian Schwarz
#
# The objdump version, including support for etch's binutils, is
# Copyright (C) 2008 Adam D. Barratt
#
# This version, a trimmed-down wrapper for hardening-check, is
# Copyright (C) 2012 Kees Cook <kees@debian.org>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, you can find it on the World Wide
# Web at http://www.gnu.org/copyleft/gpl.html, or write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
# MA 02110-1301, USA.

use strict;
use warnings;

use lib "$ENV{'LINTIAN_ROOT'}/lib";
use Util;
use Cwd;

open (OUT, '>', 'hardening-info')
    or fail("cannot open hardening-info: $!");

# If we're running inside the Lintian test suite itself, we need to avoid
# all the tests except the "binaries-hardening" test.
my $base = Cwd::realpath('.');
exit 0
    if (defined $ENV{'LINTIAN_INTERNAL_TESTSUITE'} and
        $ENV{'LINTIAN_INTERNAL_TESTSUITE'} eq "1" and
        $base !~ m|/binaries-hardening/binaries-hardening_1.0_.*_binary$|);

open (FILES, '<', 'file-info')
    or fail("cannot open file-info: $!");

# Override the arch seen by dpkg-buildflags for the arch of this package.
my @fields = read_dpkg_control ('control/control');
defined ($fields[0]{'architecture'})
    or fail ("cannot determine architecture of package!");
$ENV{'DEB_HOST_ARCH'} = $fields[0]{'architecture'}
    if ($fields[0]{'architecture'} ne "all");

# Prepare to examine the file tree.
chdir ('unpacked')
    or fail("unable to chdir to unpacked: $!");

# We must figure out what hardening features are expected by default for a
# given architecture. Extract this from "dpkg-buildflags", and set up the
# needed arguments for calling "hardening-check".
open (my $FLAGS, '-|', "dpkg-buildflags --query-features hardening")
    or fail ("could not launch dpkg-buildflags: $!");
my $args = "--lintian";
my $feature = "";
@fields = parse_dpkg_control ($FLAGS);
foreach my $flag (@fields) {
    if ($flag->{enabled} eq "no") {
        $args .= " --no" . $flag->{feature};
    }
}
close $FLAGS;

while (<FILES>) {
    if (m/^(.+?)\x00\s.*ELF/) {
        my $bin = $1;

        if (open (PIPE, '-|', "hardening-check $args -- \Q$bin\E 2>&1")) {
            local $/;
            local $_ = <PIPE>;
            print OUT $_;
            close PIPE;
        }
    }
}

close FILES;
close OUT or fail("cannot write objdump-info: $!");

exit 0;

# Local Variables:
# indent-tabs-mode: nil
# cperl-indent-level: 4
# End:
# vim: syntax=perl sw=4 sts=4 sr et
