#!/usr/bin/perl -w
# scripts -- lintian collection script

# Copyright (C) 1998 Richard Braakman
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, you can find it on the World Wide
# Web at http://www.gnu.org/copyleft/gpl.html, or write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
# MA 02110-1301, USA.

package Lintian::coll::scripts;

use strict;
use warnings;
use autodie;

use lib "$ENV{'LINTIAN_ROOT'}/lib/";
use Lintian::Collect;
use Lintian::Util qw(fail strip);

sub collect {
my ($pkg, $type, $dir) = @_;
my $info = Lintian::Collect->new ($pkg, $type, $dir);

open(SCRIPTS, '>', "$dir/scripts");

foreach my $file ($info->sorted_index) {
    next unless $info->index($file)->is_regular_file;
    my $scriptpath = shebang_line($info->unpacked($file));

    next unless defined($scriptpath); # no shebang line => not a script

    next if ($scriptpath =~ m/^\#!/); # skip lincity data files
                                      # #!#!#!
    my $copy_path = $scriptpath;
    $scriptpath =~ s/^\#.*//; # remove comments
    if ($scriptpath eq '') {
        print SCRIPTS "$copy_path $file\n";
    } else {
        my $env = '';
        if ($scriptpath =~ s,^/usr/bin/env\s+,,) {
            $env = 'env ';
        }
        # Remove everything after the first space (i.e. any options)
        $scriptpath =~ s/\s++ .++ \Z//xsm;
        print SCRIPTS $env . "$scriptpath $file\n";
    }
}
close(SCRIPTS);

open(SCRIPTS, '>', "$dir/control-scripts");

opendir(my $dirfd, "$dir/control");
for my $file (readdir($dirfd)) {
    next if $file =~ m{\A \. \.? \Z}xsm;
    my $path = $info->control($file);
    my $scriptpath;

    next if -l $path or not -f _;
    $scriptpath = shebang_line($path);
    next unless defined($scriptpath);

    # Remove everything after the first space (i.e. any options)
    $scriptpath =~ s/\s++ .++ \Z//xsm;
    print SCRIPTS "$scriptpath $file\n"
}
closedir($dirfd);
close(SCRIPTS);

}

sub shebang_line {
    my ($filename) = @_;
    my $scriptpath;
    my $magic;
    open(my $fd, '<', $filename);
    if (read($fd, $magic, 2) and $magic eq '#!' and not eof($fd)) {
        $scriptpath = <$fd>;
        strip($scriptpath);
    }
    close($fd);
    return $scriptpath;
}

collect (@ARGV) if $0 =~ m,(?:^|/)scripts$,;

1;

# Local Variables:
# indent-tabs-mode: nil
# cperl-indent-level: 4
# End:
# vim: syntax=perl sw=4 sts=4 sr et
