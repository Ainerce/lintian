Check-Script: debhelper
Author: Joey Hess <joeyh@debian.org>
Abbrev: dh
Type: source
Unpack-Level: 2
Info: This looks for common mistakes in debhelper source packages.
Needs-Info: debfiles, source-control-file

Tag: maintainer-script-lacks-debhelper-token
Type: warning
Info: This package is built using debhelper commands that may modify
 maintainer scripts, but the maintainer scripts do not contain
 the "#DEBHELPER#" token debhelper uses to modify them.
 .
 Adding the token to the scripts is recommended.

Tag: package-uses-debhelper-but-lacks-build-depends
Type: error
Info: If a package uses debhelper, it must declare a Build-Depends
 on debhelper.

Tag: package-lacks-versioned-build-depends-on-debhelper
Type: info
Info: If a package sets debhelper's compatibility version to &gt;= 5,
 either via DH_COMPAT, or via debian/compat, or via dh_testversion
 (which is deprecated), it should declare a versioned Build-Depends on
 the needed version of debhelper.
 .
 All versions of debhelper back to etch support compatibility version 5,
 but the debhelper released with sarge did not, so this dependency is
 still helpful for oldstable backports.

Tag: dh-make-template-in-source
Type: warning
Info: This package contains debian/*.ex and/or debian/ex.* files
 installed by dh_make. These are intended to be filled in with the
 package's details and renamed for use by various debhelper commands.
 If they are not being used, they should be removed.

Tag: dh_testversion-is-deprecated
Type: warning
Ref: dh_testversion(1)
Info: This package calls dh_testversion in its <tt>debian/rules</tt> file.
 dh_testversion is deprecated. Packages using debhelper should use
 versioned build dependencies to ensure that the correct version of
 debhelper is installed.

Tag: dh_dhelp-is-deprecated
Type: warning
Info: This package calls dh_dhelp in its <tt>debian/rules</tt> file.
 dh_dhelp is deprecated as it is not part of the canonical debhelper suite
 and due to be removed since it supports only one single documentation
 system (dhelp).
 .
 Simply use dh_installdocs, which creates doc-base files and supports all of
 the documentation systems that way.

Tag: dh_suidregister-is-obsolete
Type: warning
Ref: dh_suidregister(1)
Info: suidregister is obsoleted by dpkg-statoverride, so registration of
 files in with dh_suidregister is unnecessary, and even harmful.

Tag: debhelper-compat-file-is-empty
Type: error
Ref: debhelper(7)
Info: The source package has an empty debian/compat file. This is an error,
 the compat level of debhelper should be in there.

Tag: declares-possibly-conflicting-debhelper-compat-versions
Type: error
Ref: debhelper(7)
Info: The source package declares the debhelper compatibility version
 both in the <tt>debian/compat</tt> file and in the <tt>debian/rules</tt>
 file. If these ever get out of synchronisation, the package may not build
 as expected.

Tag: package-uses-deprecated-debhelper-compat-version
Type: warning
Ref: debhelper(7)
Info: The debhelper compatibility version used by this package is marked
 as deprecated by the debhelper developer. You should really consider
 using a newer compatibility version.
 .
 The compatibility version can be set in (preferred)
 <tt>debian/compat</tt> or by setting and exporting DH_COMPAT in
 <tt>debian/rules</tt>.  If it is not set in either place, debhelper
 defaults to the deprecated compatibility version 1.

Tag: package-needs-python-policy-debhelper
Type: info
Info: The source package requests dh_python compatibility level 2 (or
 higher) in <tt>debian/pycompat</tt> but doesn't depend on a new enough
 debhelper.  A Build-Depends on debhelper (&gt;= 5.0.37.2) is required for
 this support.
 .
 All versions of debhelper back to etch support this, but the debhelper
 released with sarge did not, so this dependency is still helpful for
 oldstable backports.

Tag: uses-dh-python-with-no-pycompat
Type: warning
Info: This package uses dh_python but apparently does not tell it to use
 the current Python policy by putting 2 in <tt>debian/pycompat</tt>.  This
 may mean that the package has not been converted to the current Python
 policy, in which case it probably should be.
