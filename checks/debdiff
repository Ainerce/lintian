# debdiff -- Lintian check script

# Copyright (C) 1998 Richard Braakman
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, you can find it on the World Wide
# Web at http://www.gnu.org/copyleft/gpl.html, or write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
# MA 02110-1301, USA.

package Lintian::debdiff;
use strict;
use Tags;
use Util;

sub run {

my $pkg = shift;
my $type = shift;

open (VERSION, "fields/version") or fail("cannot open fields/version: $!");
chomp(my $version = <VERSION>);
close VERSION;
$version =~ s/^\d+://; #Remove epoch

if ((not -f "${pkg}_${version}.diff.gz") and
    ($version =~ /-/) and ($version !~ /-0\.[^-]+$/) ) {
    tag_warn("native-package-with-dash-version");
}

open(STAT, "diffstat") or fail("cannot open diffstat file: $!");

while (<STAT>) {
    chop;

    my $file;

    m/^\s+(.*?)\s+\|/
	or fail("syntax error in diffstat file: $_");
    $file = $1;
    tag_warn("patch-failure-file-in-diff", $file)
	if ($file =~ m/\.(orig|rej)$/);
}
close(STAT) or fail("error reading diffstat file: $!");

# Check whether a tar.gz file is accidentally POSIX tar, which woody's tar
# can't cope with...
for my $tar (<*.tar.gz>) {
    open HEAD, '-|', 'zcat '.quotemeta($tar) or fail("Couldn't open ${tar}: $!");
	my $head = "";
    sysread HEAD, $head, 13 or fail("Couldn't read first part of $tar: $!");
    tag "source-tar-is-posix-tar", "$tar"
    	if $head eq './PaxHeaders.';
    close HEAD;
}

} # </run>

# ---------------------------------

sub tag_warn {
    my $tag = shift;
    if ($#_ >= 0) {
        # We can't have newlines in a tag message, so turn them into \n
        map { s,\n,\\n, } @_;
        my $args = join(' ', @_);
        tag "$tag", "$args";
    } else {
        tag "$tag", "";
    }
}

1;
