# nmu -- lintian check script -*- perl -*-

# Copyright (C) 2004 Jeroen van Wolffelaar
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, you can find it on the World Wide
# Web at http://www.gnu.org/copyleft/gpl.html, or write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
# MA 02110-1301, USA.

package Lintian::nmu;
use strict;
use warnings;

use Lintian::Data;
use Lintian::Tags qw(tag);
use Util;

# Used to match Ubuntu distribution names in target distributions.
our $UBUNTU_REGEX;
{
	my $dists = Lintian::Data->new('changelog-file/ubuntu-dists');
	my $string = join ('|', 'ubuntu', $dists->all);
	$UBUNTU_REGEX = qr/$string/o;
}

sub run {

my $pkg = shift;
my $type = shift;
my $info = shift;

my $changelog_mentions_nmu = 0;
my $changelog_mentions_local = 0;
my $changelog_mentions_qa = 0;
my $changelog_mentions_team_upload = 0;

# This isn't really an NMU check, but right now no other check looks at
# debian/changelog in source packages.  Catch a debian/changelog file that's a
# symlink.
if (-l $info->debfiles('changelog')) {
    tag 'changelog-is-symlink';
    return 0;
}

# Get some data from the changelog file.
my ($entry) = $info->changelog->data;
my $distribution = $entry->Distribution;
my $uploader = canonicalize($entry->Maintainer);
my $changes = $entry->Changes;
$changes =~ s/^(\s*\n)+//;
my $firstline = (grep /^\s*\*/, split('\n', $changes))[0];

# Check the first line for QA, NMU or team upload mentions.
if ($firstline) {
	local $_ = $firstline;
	if (/\bnmu\b/i or /non-maintainer upload/i or m/LowThresholdNMU/io) {
		unless (/(?:ackno|\back\b|confir|incorporat).*(?:\bnmu\b|non-maintainer)/i) {
			$changelog_mentions_nmu = 1;
		}
	}
	$changelog_mentions_local = 1 if /\blocal\s+package\b/i;
	$changelog_mentions_qa = 1 if /orphan/i or /qa (?:group )?upload/i;
	$changelog_mentions_team_upload = 1 if /team upload/i;
}

my $version = $info->field('version');
my $maintainer = canonicalize($info->field('maintainer')//'');
my $uploaders = $info->field('uploaders');

my $version_nmuness = 0;
my $version_local = 0;
if ($version =~ /-[^.-]+(\.[^.-]+)?(\.[^.-]+)?$/) {
	$version_nmuness = 1 if defined $1;
	$version_nmuness = 2 if defined $2;
}
if ($version =~ /\+nmu\d+$/) {
	$version_nmuness = 1;
}
if ($version =~ /\+b\d+$/) {
	$version_nmuness = 2;
}
if ($version =~ /local/i) {
	$version_local = 1;
}

my $upload_is_nmu = $uploader ne $maintainer;
if (defined $uploaders) {
	my @uploaders = map { canonicalize($_) } split /,/, $uploaders;
	$upload_is_nmu = 0 if grep /^\s*\Q$uploader\E\s*$/, @uploaders;
}

# No such thing as NMUs in Ubuntu-land.
if ($version =~ /$UBUNTU_REGEX/ or $distribution =~ /$UBUNTU_REGEX/) {
	$upload_is_nmu = 0;
	$version_nmuness = 0;
}

if ($maintainer =~ /packages\@qa.debian.org/) {
	tag 'orphaned-package-should-not-have-uploaders', ''
		if defined $uploaders;
	tag 'qa-upload-has-incorrect-version-number', $version
		if $version_nmuness == 1;
	tag 'changelog-should-mention-qa', ''
		if !$changelog_mentions_qa;
} elsif ($changelog_mentions_team_upload) {
	tag 'team-upload-has-incorrect-version-number', $version
		if $version_nmuness == 1;
} else {
	# Local packages may be either NMUs or not.
	unless ($changelog_mentions_local || $version_local) {
		tag 'changelog-should-mention-nmu', ''
		    if !$changelog_mentions_nmu && $upload_is_nmu;
		tag 'source-nmu-has-incorrect-version-number', $version
		    if $upload_is_nmu && $version_nmuness != 1;
	}
	tag 'changelog-should-not-mention-nmu', ''
		if $changelog_mentions_nmu && !$upload_is_nmu;
	tag 'maintainer-upload-has-incorrect-version-number', $version
		if !$upload_is_nmu && $version_nmuness;
}

}

# Canonicalize a maintainer address with respect to case.  E-mail addresses
# are case-insensitive in the right-hand side.
sub canonicalize {
	my ($maintainer) = @_;
	$maintainer =~ s/(<[^>\@]+\@)([\w.-]+)>/$1 . lc ($2)/e;
	return $maintainer;
}

1;

# Local Variables:
# indent-tabs-mode: t
# cperl-indent-level: 8
# End:
# vim: ts=4 sw=4
